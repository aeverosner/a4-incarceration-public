average_salary_WNBA <- mean(wnba_data$salary)
print(average_salary_WNBA)
print(avg_salary_per_min_NBA)
# Average dollars earned per minute of play (NBA)
avg_salary_per_min_NBA <- mean((nba_data$salary)/(nba_data$minutes))
print(avg_salary_per_min_NBA)
# Maximum NBA salary
max_salary_NBA <- max(nba_data$salary)
print(max_salary_NBA)
# Maximum WNBA salary
max_salary_WNBA <- max(wnba_data$salary)
print(max_salary_WNBA)
# Minimum NBA salary
min_salary_NBA <- min(nba_data$salary)
print(min_salary_NBA)
# Minimum WNBA salary
min_salary_WNBA <- min(wnba_data$salary)
print(min_salary_WNBA)
print(zero_minutes_rows_nba)
# Average dollars earned per minute of play (NBA)
zero_minutes_rows_nba <- nba_data[nba_data$minutes ==0]
# Average dollars earned per minute of play (NBA)
zero_minutes_rows_nba <- nba_data[nba_data$minutes == 0, ]
print(zero_minutes_rows_nba)
nba_data_no_zero_minutes <- nba_data[nba_data$minutes != 0, ]
avg_salary_per_min_NBA <- mean((zero_minutes_rows_nba$salary)/(zero_minutes_rows_nba$minutes))
print(avg_salary_per_min_NBA)
zero_minutes_rows_nba <- nba_data[nba_data$minutes == 0, ]
print(zero_minutes_rows_nba)
nba_data_no_zero_minutes <- nba_data[nba_data$minutes != 0, ]
avg_salary_per_min_NBA <- mean((zero_minutes_rows_nba$salary)/(zero_minutes_rows_nba$minutes))
print(avg_salary_per_min_NBA)
avg_salary_per_min_NBA <- mean((nba_data_no_zero_minutes$salary)/(nba_data_no_zero_minutes$minutes))
print(avg_salary_per_min_NBA)
View(nba_data_no_zero_minutes)
wnba_data_no_zero_minutes <- wnba_data[wnba_data$minutes != 0, ]
View(wnba_data_no_zero_minutes)
avg_salary_per_min_WNBA <- mean((wnba_data_no_zero_minutes$salary)/(wnba_data_no_zero_minutes$minutes))
print(avg_salary_per_min_WNBA)
nba_data_no_zero_points <- nba_data[nba_data$points != 0, ]
View(nba_data_no_zero_points)
avg_salary_per_point_NBA <- mean((nba_data_no_zero_points$salary)/(nba_data_no_zero_points$points))
print(avg_salary_per_point_NBA)
wnba_data_no_zero_points <- wnba_data[wnba_data$points != 0, ]
View(wnba_data_no_zero_points)
avg_salary_per_point_WNBA <- mean((wnba_data_no_zero_points$salary)/(wnba_data_no_zero_points$points))
print(avg_salary_per_point_WNBA)
min_meal_lost <- financial_df %>%
select(`State Name`, `Meals Not Consumed due to Budget Shortfall`) %>%
group_by(`Meals Not Consumed due to Budget Shortfall`) %>%
filter(
`Meals Not Consumed due to Budget Shortfall` ==
min(`Meals Not Consumed due to Budget Shortfall`)
) %>%
pull(`State Name`)
library(tidyverse)
library(dplyr)
library(readxl)
library(plyr)
library(scales)
fa_2018 <- read_excel("DATA/Feeding America Data/MMG2020_2018Data_ToShare.xlsx",
skip = 1, sheet = "2018 State"
)
financial_df <- fa_2018 %>%
select(
`State Name`, `2018 Cost Per Meal`,
`2018 Weighted Annual Food Budget Shortfall`
) %>%
group_by(`State Name`) %>%
mutate(
`Meals Not Consumed due to Budget Shortfall` =
`2018 Weighted Annual Food Budget Shortfall` / `2018 Cost Per Meal`
) %>%
mutate(
`Meals Not Consumed due to Budget Shortfall` =
number(`Meals Not Consumed due to Budget Shortfall`, big.mark = ",")
) %>%
mutate(
`2018 Weighted Annual Food Budget Shortfall` =
number(`2018 Weighted Annual Food Budget Shortfall`, big.mark = ",")
)
View(fa_2018)
# Load data
fa_2018 <- read_excel("DATA/Feeding America Data/MMG2020_2018Data_ToShare.xlsx",
skip = 1, sheet = "2018 State"
)
# Load Data
nba_data <- read_csv("C:/Users/aever/Documents/INFO201/exploratory-analysis-charliebond1/NBA Player Salaries (2022-23 Season)_exported.csv")
View(nba_data)
source("CHART2_PALMY.R")
library(shiny)
library(shiny)
install.packages(shiny)
install.packages("shiny")
install.packages("shiny")
library(shiny); runApp('ui1.R')
runApp('ui1.R')
runApp('ui1.R')
runApp('ui1.R')
# add library
library(shiny)
page_one <- tabPanel(
"intro page",
titlePanel("Introduction"),
sidebarLayout(
sidebarPanel(
h1("NBA and WNBA Salary Comparison"),
h2("Abstract"),
p("Our main goal with this project is to explore the difference in salary
between NBA players and WNBA players, which is important because it
points to a larger issue of gender inequality that spans nearly every
career path. To address this question, we will be comparing the salaries
of professional players across both leagues and using our dataset to
analyze trends in salary vs games played, points scored, and other
factors. When doing this, it is important to consider that this data
spans a short time frame (2016-2017), which needs to be taken into
account when making conclusions from our analysis; however, our goal of
bringing light to the issue of the wage gap by applying it to the
popular world of professional sports still stands.")),
mainPanel(
h2("Crunching the Numbers"),
p("After performing a preliminary analysis of the data and calculating a
few values, the difference between female and male players' earnings is
astonishing. Beginning with the average salary within each league, we
found that the average salary in the NBA was over
$8.4 million, while in the WNBA, the average salary was a
mere $130,000 - a difference of
$8.29 million. Taking a closer look, we first compared the
highest and lowest salaries between the leagues. We found that the
maximum NBA salary $48,070,014 was 47.8 million reater than
the highest WNBA salary. Interestingly, the lowest NBA salary $5,849
was $58,000 less than the lowest WNBA salary of 64,154.
We also compared salaries relative to performance metrics such as salary
per point and salary per minute played. Although on average, WNBA
players did tend to score less in games, the money they earned per point
and minute played was still significantly less than their male
counterparts. On average, NBA players made 850,078.40 per point, whereas
WNBA players only earned 18,532.70 for every point they scored (a
difference of 831,546.30). Additionally, NBA players earned 11,637.74
dollars for every minute of play, while female players in the WNBA only
made 6,447.84 dollars (a difference of $5,189.90). Check out our data visualizations for a clearer view of these astonishing disparities.")
))
)
page_two <- tabPanel(
"Chart 1",
titlePanel("Performance vs Compensation"),
sidebarLayout(
sidebarPanel(
radioButtons(inputId = "stat", label = "Select a performance statistic to view", choices = list("points" = 1, "minutes" = 2))
),
mainPanel("Compensation by performance stat")
)
)
# UI
ui <- navbarPage(
"Pay Gap in Professional Basketball",
page_one,
page_two
)
# defining server output
server <- function(input, output) {
}
# run the app
shinyApp(ui = ui, server = server)
runApp('C:/Users/aever/Documents/INFO201/final-project-aeverosner/final_project.R')
runApp('C:/Users/aever/Documents/INFO201/final-project-aeverosner/final_project.R')
# add library
library(shiny)
page_one <- tabPanel(
"intro page",
titlePanel("Introduction"),
sidebarLayout(
sidebarPanel(
h1("NBA and WNBA Salary Comparison"),
h2("Abstract"),
p("Our main goal with this project is to explore the difference in salary
between NBA players and WNBA players, which is important because it
points to a larger issue of gender inequality that spans nearly every
career path. To address this question, we will be comparing the salaries
of professional players across both leagues and using our dataset to
analyze trends in salary vs games played, points scored, and other
factors. When doing this, it is important to consider that this data
spans a short time frame (2016-2017), which needs to be taken into
account when making conclusions from our analysis; however, our goal of
bringing light to the issue of the wage gap by applying it to the
popular world of professional sports still stands.")),
mainPanel(
h2("Crunching the Numbers"),
p("After performing a preliminary analysis of the data and calculating a
few values, the difference between female and male players' earnings is
astonishing. Beginning with the average salary within each league, we
found that the average salary in the NBA was over
$8.4 million, while in the WNBA, the average salary was a
mere $130,000 - a difference of
$8.29 million. Taking a closer look, we first compared the
highest and lowest salaries between the leagues. We found that the
maximum NBA salary $48,070,014 was 47.8 million reater than
the highest WNBA salary. Interestingly, the lowest NBA salary $5,849
was $58,000 less than the lowest WNBA salary of 64,154.
We also compared salaries relative to performance metrics such as salary
per point and salary per minute played. Although on average, WNBA
players did tend to score less in games, the money they earned per point
and minute played was still significantly less than their male
counterparts. On average, NBA players made 850,078.40 per point, whereas
WNBA players only earned 18,532.70 for every point they scored (a
difference of 831,546.30). Additionally, NBA players earned 11,637.74
dollars for every minute of play, while female players in the WNBA only
made 6,447.84 dollars (a difference of $5,189.90). Check out our data visualizations for a clearer view of these astonishing disparities.")
))
)
page_two <- tabPanel(
"Chart 1",
titlePanel("Performance vs Compensation"),
sidebarLayout(
sidebarPanel(
radioButtons(inputId = "stat", label = "Select a performance statistic to view", choices = list("points" = 1, "minutes" = 2))
),
mainPanel("Compensation by performance stat")
)
)
page_three <- tabPanel(
"Chart 2",
titlePanel("salary comparison"),
sidebarLayout(
sidebarPanel(
radioButtons(inputId = "salary", label = "use the slide bar to view:", choices = list("wnba" = 1, "nba" = 2))
),
mainPanel("Salary comparison box plot")
)
)
page_four <- tabPanel(
"Chart 3",
titlePanel("salary change"),
sidebarLayout(
sidebarPanel(
radioButtons(InputId = "year", label = "select a year/years to view:", choices = list("2016" = 1, "2024" = 2))
),
mainPanel("Salary change bar graph")
)
)
runApp('C:/Users/aever/Documents/INFO201/final-project-aeverosner/final_project.R')
setwd("C:'Users/aever/Documents/INFO201/a4-incarceration-assignment-aeverosner")
setwd("C:/Users/aever/Documents/INFO201/a4-incarceration-assignment-aeverosner")
source("summary.R")
avg_rate
# Open dataset and view data
library(dplyr)
jail_data <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/us-prison-jail-rates.csv")
# View(jail_data)
# Calculate summary statistics for different size cities
# average rate overall
avg_rate <- mean(jail_data$total_prison_pop_rate)
avg_rate_black <- mean(jail_data$black_prison_pop_rate)
#avg rate rural
avg_rate_rural <- jail_data %>%
filter(urbanicity == "rural") %>%
summarize(average_rate = mean(total_prison_pop_rate, na.rm = TRUE)) %>%
pull(average_rate)
# avg rate rural (among Black population)
avg_rate_rural_black <- jail_data %>%
filter(urbanicity == "rural") %>%
summarize(average_rate2 = mean(black_prison_pop_rate, na.rm = TRUE)) %>%
pull(average_rate2)
# avg rate small/mid city
avg_rate_small <- jail_data %>%
filter(urbanicity == "small/mid") %>%
summarize(average_rate3 = mean(total_prison_pop_rate, na.rm = TRUE)) %>%
pull(average_rate3)
# avg rate small/mid among Black population
avg_rate_small_black <- jail_data %>%
filter(urbanicity == "small/mid") %>%
summarize(average_rate4 = mean(black_prison_pop_rate, na.rm = TRUE)) %>%
pull(average_rate4)
# avg rate urban
avg_rate_urban <- jail_data %>%
filter(urbanicity == "urban") %>%
summarize(average_rate5 = mean(total_prison_pop_rate, na.rm = TRUE)) %>%
pull(average_rate5)
avg_rate_urban
# avg rate black urban
avg_rate_urban_black <- jail_data %>%
filter(urbanicity == "urban") %>%
summarize(average_rate6 = mean(black_prison_pop_rate, na.rm = TRUE)) %>%
pull(average_rate6)
avg_rate_urban_black
# max rate
max_rate <- max(jail_data$total_prison_pop_rate, na.rm = TRUE)
# max rate black pops
max_rate_black <- max(jail_data$black_prison_pop_rate, na.rm = TRUE)
# min rate
min_rate <- min(jail_data$total_prison_pop_rate, na.rm = TRUE)
# min rate black pops
min_rate_black <- min(jail_data$black_prison_pop_rate, na.rm = TRUE)
# diff in rates over time
avg_rate_1970<- jail_data %>%
filter(year == "1970") %>%
summarize(average_rate7 = mean(total_prison_pop_rate, na.rm = TRUE)) %>%
pull(average_rate7)
jail_data$total_prison_pop_rate <- as.numeric(jail_data$total_prison_pop_rate)
avg_rate_2018 <- jail_data %>%
filter(year == "2018") %>%
summarize(average_rate8 = mean(total_prison_pop_rate, na.rm = TRUE)) %>%
pull(average_rate8)
avg_rate_2018
diff_rate <- avg_rate_2018 - avg_rate_1970
diff_rate
# Calculate summary statistics for different size cities
# average rate overall
avg_rate <- mean(jail_data$total_prison_pop_rate)
# Calculate summary statistics for different size cities
# average rate overall
avg_rate <- mean(jail_data$total_prison_pop_rate)
# Calculate summary statistics for different size cities
# average rate overall
avg_rate <- mean(jail_data$total_prison_pop_rate, na.rm = TRUE)
avg_rate_black <- mean(jail_data$black_prison_pop_rate, na.rm = TRUE)
avg_rate
avg_rate_black
avg_rate_rural
avg_rate_rural_black
avg_rate_urban
avg_rate_urban_black
# View(jail_data)
nrow(jail_data)
ncol(jail_data)
library(dplyr)
jail_data <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/us-prison-jail-rates.csv")
library(ggplot2)
x_values <- seq(1970, 2020)
# max rate black pops
max_rate_black <- max(jail_data$black_prison_pop_rate, na.rm = TRUE)
max_rate_black
y_values <- seq(1, 2,200,000)
ggplot() +
geom_line(aes(x=x_values, y=y_values))
ggplot() +
geom_line(aes(x = x_values, y = y_values))
View(jail_data)
chart_1_data <- jail_data %>%
group_by(year) %>%
summarize(
avg_rate_time <- mean(total_prison_pop_rate),
avg_rate_time_black <- mean(black_prison_pop_rate),
avg_rate_time_white <- mean(white_prison_pop_rate)
)
View(chart_1_data)
chart_1_data <- jail_data %>%
group_by(year) %>%
summarize(
avg_rate_time <- mean(total_prison_pop_rate, na.rm = TRUE),
avg_rate_time_black <- mean(black_prison_pop_rate, na.rm = TRUE),
avg_rate_time_white <- mean(white_prison_pop_rate, na.rm = TRUE)
)
View(chart_1_data)
any_na_black <- any(is.na(jail_data$black_prison_pop_rate))
black_prison_pop_rate_no_na <- na.omit(jail_data$black_prison_pop_rate)
chart_1_data <- jail_data %>%
group_by(year) %>%
summarize(
avg_rate_time <- mean(total_prison_pop_rate_no_na, na.rm = TRUE),
avg_rate_time_black <- mean(black_prison_pop_rate, na.rm = TRUE),
avg_rate_time_white <- mean(white_prison_pop_rate, na.rm = TRUE)
)
chart_1_data <- jail_data %>%
group_by(year) %>%
summarize(
avg_rate_time <- mean(total_prison_pop_rate, na.rm = TRUE),
avg_rate_time_black <- mean(black_prison_pop_rate_no_na, na.rm = TRUE),
avg_rate_time_white <- mean(white_prison_pop_rate, na.rm = TRUE)
)
View(chart_1_data)
white_prison_pop_rate_no_na <- na.omit(jail_data$white_prison_pop_rate)
chart_1_data <- jail_data %>%
group_by(year) %>%
summarize(
avg_rate_time <- mean(total_prison_pop_rate, na.rm = TRUE),
avg_rate_time_black <- mean(black_prison_pop_rate_no_na, na.rm = TRUE),
avg_rate_time_white <- mean(white_prison_pop_rate_no_na, na.rm = TRUE)
)
View(chart_1_data)
chart_1_data <- jail_data %>%
group_by(year) %>%
summarize(
avg_rate_time <- mean(total_prison_pop_rate, na.rm = TRUE),
avg_rate_time_black <- mean(black_prison_pop_rate_no_na),
avg_rate_time_white <- mean(white_prison_pop_rate_no_na, na.rm = TRUE)
)
View(chart_1_data)
any_na_black <- any(is.na(jail_data$black_prison_pop_rate) | !is.finite(jail_data$black_prison_pop_rate))
any_na_white <- any(is.na(jail_data$white_prison_pop_rate) | !is.finite(jail_data$white_prison_pop_rate))
# Print out the problematic rows for black_prison_pop_rate and white_prison_pop_rate
if (any_na_black) {
print(jail_data[is.na(jail_data$black_prison_pop_rate) | !is.finite(jail_data$black_prison_pop_rate), ])
}
if (any_na_white) {
print(jail_data[is.na(jail_data$white_prison_pop_rate) | !is.finite(jail_data$white_prison_pop_rate), ])
}
chart_1_data <- jail_data %>%
group_by(year) %>%
summarize(
avg_rate_time <- mean(total_prison_pop_rate, na.rm = TRUE),
avg_rate_time_black <- mean(black_prison_pop_rate_no_na, na.rm = TRUE),
avg_rate_time_white <- mean(white_prison_pop_rate_no_na, na.rm = TRUE)
)
View(chart_1_data)
chart_1_data <- jail_data %>%
group_by(year) %>%
summarize(
avg_rate_time <- mean(total_prison_pop_rate, na.rm = TRUE),
avg_rate_time_black <- mean(black_prison_pop_rate, na.rm = TRUE),
avg_rate_time_white <- mean(white_prison_pop_rate, na.rm = TRUE)
)
View(chart_1_data)
# Print out the problematic rows for black_prison_pop_rate and white_prison_pop_rate
print("Rows with NA or NaN values in black_prison_pop_rate:")
print(jail_data[is.na(jail_data$black_prison_pop_rate) | !is.finite(jail_data$black_prison_pop_rate), ])
print("Rows with NA or NaN values in white_prison_pop_rate:")
print(jail_data[is.na(jail_data$white_prison_pop_rate) | !is.finite(jail_data$white_prison_pop_rate), ])
chart_1_data <- jail_data %>%
group_by(year) %>%
summarize(
avg_rate_time <- mean(total_prison_pop_rate, na.rm = TRUE),
avg_rate_time_black <- mean(black_prison_pop_rate, na.rm = TRUE),
avg_rate_time_white <- mean(white_prison_pop_rate, na.rm = TRUE)
)
View(chart_1_data)
chart_1_data <- jail_data %>%
group_by(year) %>%
summarize(
avg_rate_time = mean(total_prison_pop_rate, na.rm = TRUE),
avg_rate_time_black = mean(black_prison_pop_rate, na.rm = TRUE),
avg_rate_time_white = mean(white_prison_pop_rate, na.rm = TRUE)
)
View(chart_1_data)
library(dplyr)
library(ggplot2)
jail_data <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/us-prison-jail-rates.csv")
white_prison_pop_rate_no_na <- na.omit(jail_data$white_prison_pop_rate)
black_prison_pop_rate_no_na <- na.omit(jail_data$black_prison_pop_rate)
chart_1_data <- jail_data %>%
group_by(year) %>%
summarize(
avg_rate_time = mean(total_prison_pop_rate, na.rm = TRUE),
avg_rate_time_black = mean(black_prison_pop_rate, na.rm = TRUE),
avg_rate_time_white = mean(white_prison_pop_rate, na.rm = TRUE)
)
View(chart_1_data)
library(dplyr)
library(ggplot2)
jail_data <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/us-prison-jail-rates.csv")
white_prison_pop_rate_no_na <- na.omit(jail_data$white_prison_pop_rate)
black_prison_pop_rate_no_na <- na.omit(jail_data$black_prison_pop_rate)
chart_1_data <- jail_data %>%
group_by(year) %>%
summarize(
avg_rate_time = mean(total_prison_pop_rate, na.rm = TRUE),
avg_rate_time_black = mean(black_prison_pop_rate, na.rm = TRUE),
avg_rate_time_white = mean(white_prison_pop_rate, na.rm = TRUE)
)
View(chart_1_data)
library(dplyr)
library(ggplot2)
jail_data <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/us-prison-jail-rates.csv")
white_prison_pop_rate_no_na <- na.omit(jail_data$white_prison_pop_rate)
black_prison_pop_rate_no_na <- na.omit(jail_data$black_prison_pop_rate)
chart_1_data <- jail_data %>%
group_by(year) %>%
summarize(
avg_rate_time = mean(total_prison_pop_rate, na.rm = TRUE),
avg_rate_time_black = mean(black_prison_pop_rate, na.rm = TRUE),
avg_rate_time_white = mean(white_prison_pop_rate, na.rm = TRUE)
)
View(chart_1_data)
chart_1_graph <- ggplot(chart_1_data, aes(x = year)) +
geom_line(aes(y = avg_rate_time, color = "Total")) +
geom_line(aes(y = avg_rate_time_black, color = "Black")) +
geom_line(aes(y = avg_rate_time_white, color = "White")) +
labs(title = "Incarceration Rates Over Time",
x = "Year",
y = "Average Incarceration Rate") +
scale_color_manual(values = c("Total" = "black", "Black" = "red", "White" = "blue")) +
theme_minimal()
chart_1_graph
chart_1_graph <- ggplot(chart_1_data, aes(x = year)) +
geom_line(aes(y = avg_rate_time, color = "Total")) +
geom_line(aes(y = avg_rate_time_black, color = "Black")) +
geom_line(aes(y = avg_rate_time_white, color = "White")) +
labs(title = "Incarceration Rates Over Time",
x = "Year",
y = "Average Incarceration Rate",
color = "Race") +
scale_color_manual(values = c("Total" = "black", "Black" = "red", "White" = "blue")) +
theme_minimal()
chart_1_graph
chart_1_graph <- ggplot(chart_1_data, aes(x = year)) +
geom_line(aes(y = avg_rate_time, color = "Total")) +
geom_line(aes(y = avg_rate_time_black, color = "Black")) +
geom_line(aes(y = avg_rate_time_white, color = "White")) +
labs(title = "Incarceration Rates Over Time",
x = "Year",
y = "Average Incarceration Rate",
color = "Race") +
scale_color_manual(values = c("Total" = "red", "Black" = "black", "White" = "blue")) +
theme_minimal()
chart_1_graph
``````{r, echo = FALSE, code = readLines("chart_1_graph")}
source("chart1_time.R")
source("chart1_time.R")
chart_1_graph
source("chart1_time.R")
source("chart1_time.R")
chart_1_graph
